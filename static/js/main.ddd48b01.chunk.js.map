{"version":3,"sources":["utils/GlobalState.js","Name.js","Map.js","Location.js","UserForm.js","utils/debounceLocation.js","index.js"],"names":["GlobalContext","React","createContext","GlobalProvider","children","useState","name","location","state","setState","useEffect","navigator","geolocation","getCurrentPosition","a","coords","lat","latitude","lon","longitude","fetch","response","json","data","console","log","plus_code","userCityArr","compound_code","split","slice","userCity","join","substring","length","city","Provider","value","RandomComponent","useContext","style","marginTop","className","M","ReactMapboxGl","accessToken","Map","containerStyle","height","width","border","center","zoom","type","id","layout","coordinates","Location","Form","debouncedLocation","setDebouncedLocation","timeoutId","setTimeout","clearTimeout","useDebounceLocation","results","geometry","lng","onChange","e","target","App","UserForm","role","aria-label","Name","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ddd48b01.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst GlobalContext = React.createContext(null);\r\n\r\nfunction GlobalProvider({ children }) {\r\n  const [state, setState] = useState({ name: '', location: {} });\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      async ({ coords: { latitude: lat, longitude: lon } }) => {\r\n        const response = await fetch(\r\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lon}&key=AIzaSyD_tgpw_aI3elBJ3FQzH5kqi00Qep6jXxM`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data.plus_code);\r\n        const userCityArr = [\r\n          data.plus_code.compound_code.split(' ').slice(1, 2),\r\n          ' ',\r\n          data.plus_code.compound_code.split(' ').slice(2, 3),\r\n        ];\r\n        const userCity = userCityArr\r\n          .join('')\r\n          .substring(0, userCityArr.join('').length - 1);\r\n        setState({\r\n          ...state,\r\n          location: { ...location, city: userCity, coords: { lat, lon } },\r\n        });\r\n      },\r\n      () => {\r\n        console.log(\"Couldn't get position!\");\r\n      }\r\n    );\r\n  }, []);\r\n  return (\r\n    <GlobalContext.Provider value={{ state, setState }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n\r\nexport { GlobalProvider, GlobalContext };\r\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"./utils/GlobalState\";\n// This component displays name from Context\nconst RandomComponent = () => {\n  const {\n    state: { name }\n  } = useContext(GlobalContext);\n  \n  return (\n    <div style={{ marginTop: \"30px\" }}>\n      <h2 className=\"is-size-4\">\n        {/* Pass name from context here */}\n        <strong>Name</strong>: {name}\n      </h2>\n    </div>\n  );\n};\n\nexport default RandomComponent;\n","import React from 'react';\r\nimport ReactMapboxGl, { Layer, Feature, LngLat } from 'react-mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst M = ReactMapboxGl({\r\n  accessToken:\r\n    'pk.eyJ1IjoianJqYWNrc28iLCJhIjoiY2s5ZzFvMmN2MGV0dzNtbzN4dGlqaGc1dCJ9.vUi9VvVM7kb2AoPYLVW89w',\r\n});\r\n\r\nexport const Map = ({ lat, lon }) => {\r\n  return (\r\n    <>\r\n      {lat && lon && (\r\n        <M\r\n          style=\"mapbox://styles/mapbox/streets-v9\"\r\n          containerStyle={{\r\n            height: '50vh',\r\n            width: '50vw',\r\n            border: '1px solid black',\r\n            marginTop: '1rem',\r\n          }}\r\n          center={[lon, lat]}\r\n          zoom={[9]}\r\n        >\r\n          <Layer\r\n            type=\"symbol\"\r\n            id=\"marker\"\r\n            layout={{ 'icon-image': 'marker-15' }}\r\n          >\r\n            <Feature coordinates={[lat, lon]} />\r\n          </Layer>\r\n        </M>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Map } from './Map';\r\nimport { GlobalContext } from './utils/GlobalState';\r\n// This component displays location from context\r\n\r\nconst Location = () => {\r\n  const {\r\n    state: { location },\r\n  } = useContext(GlobalContext);\r\n  return (\r\n    <div>\r\n      {/* Display user's location from Context */}\r\n      <h2 className=\"is-size-4\">\r\n        <strong>Location</strong>: {location.city}\r\n        <Map {...location.coords} />\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useDebounceLocation } from './utils/debounceLocation';\r\nimport { GlobalContext } from './utils/GlobalState';\r\n\r\nconst Form = () => {\r\n  const {\r\n    state: { name, location },\r\n    setState,\r\n  } = useContext(GlobalContext);\r\n  const debouncedLocation = useDebounceLocation(location.city);\r\n  useEffect(async () => {\r\n    if (debouncedLocation) {\r\n      console.log('Setting new location coords');\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${debouncedLocation}&key=AIzaSyD_tgpw_aI3elBJ3FQzH5kqi00Qep6jXxM`\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setState({\r\n        name,\r\n        location: {\r\n          ...location,\r\n          coords: {\r\n            lat: data.results[0].geometry.location.lat,\r\n            lon: data.results[0].geometry.location.lng,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [debouncedLocation]);\r\n\r\n  return (\r\n    <div className=\"user-form\">\r\n      {/* Change user's name in context */}\r\n      <div className=\"input-item\">\r\n        <label className=\"label\">Update Name: </label>\r\n        <input\r\n          className=\"input\"\r\n          onChange={(e) => setState({ location, name: e.target.value })}\r\n          value={name}\r\n        />\r\n      </div>\r\n\r\n      {/* Change user's location in context */}\r\n      <div className=\"input-item\">\r\n        <label className=\"label\">Update Location: </label>\r\n        <input\r\n          className=\"input\"\r\n          onChange={(e) =>\r\n            setState({ name, location: { ...location, city: e.target.value } })\r\n          }\r\n          value={location.city}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounceLocation = (value) => {\r\n  const [debouncedLocation, setDebouncedLocation] = useState(value);\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setDebouncedLocation(value);\r\n    }, 2000);\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedLocation;\r\n};\r\n\r\nexport { useDebounceLocation };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Name from './Name';\r\nimport Location from './Location';\r\nimport UserForm from './UserForm';\r\nimport { GlobalProvider } from './utils/GlobalState';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"App\">\r\n        <h2 className=\"is-size-4\">\r\n          We'll use the React Context API to pass and receive data in any\r\n          component.\r\n        </h2>\r\n        <div className=\"container\">\r\n          <UserForm />\r\n\r\n          <h2 className=\"is-size-4\">\r\n            Display User Info Here{' '}\r\n            <span role=\"img\" aria-label=\"point-down-label\">\r\n              👇\r\n            </span>\r\n          </h2>\r\n          <p>\r\n            These two children components will receive data. These could be\r\n            nested components.\r\n          </p>\r\n          <Name />\r\n          <Location />\r\n        </div>\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\n// Wrap parent component with context provider\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}